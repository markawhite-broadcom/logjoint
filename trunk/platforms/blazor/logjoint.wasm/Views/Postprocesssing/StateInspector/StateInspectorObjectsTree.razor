@namespace LogJoint.Wasm.UI.Postprocessing
@using LogJoint.UI.Presenters.Postprocessing.StateInspectorVisualizer

<div class="objects-tree @Class">
    <div class="toolbar">Objects:</div>
    <TreeView Class="the-tree" NodeClass="si-node" Root="@ObjectsTreeRoot"
              OnSelect="@(nodes => ViewModel.OnSelect(nodes.OfType<IObjectsTreeNode>().ToArray()))"
              OnExpand="@(node => ViewModel.OnExpandNode(node as IObjectsTreeNode))"
              OnCollapse="@(node => ViewModel.OnCollapseNode(node as IObjectsTreeNode))">
        <NodeTemplate>
            @{var paintInfo = PaintNode((IObjectsTreeNode)context, getPrimaryPropValue: true);}
            <span class="n">@context.ToString()</span>
            @if (!string.IsNullOrEmpty(paintInfo.PrimaryPropValue))
            {
                <span class="p"><span>@paintInfo.PrimaryPropValue</span></span>
            }
        </NodeTemplate>
    </TreeView>
</div>

@code {
    [Parameter]
    public string Class { get; set; } = "";

    [Parameter]
    public IViewModel ViewModel { get; set; }

    [Parameter]
    public IObjectsTreeNode ObjectsTreeRoot { get; set; }

    [Parameter]
    public PaintNodeDelegate PaintNode { get; set; }
}
